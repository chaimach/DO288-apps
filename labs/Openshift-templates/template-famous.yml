apiVersion: v1
kind: Template
metadata:
  name: famous-mariadb-template
  annotations:
    description: "Template for a quotes application with a mariadb database."
    tags: "famousapp, mariadb, template"
parameters:
  - name: APP_NAME
    description: "Name of the application"
    value: famousapp-mariadb-{cuid}
  - name: APP_NAME_IMAGE
    description: "Famous container image"
    value: quay.io/redhattraining/famous-quotes:2.1
  - name: Mariadb_IMAGE
    description: "Mariadb container image"
    value:  dockerproxy.repos.tech.orange/bitnami/mariadb:10.5.10-debian-10-r0
  - name: QUOTES_USER
    description: "Quotes username for Mariadb"
    value: quotes
  - name: QUOTES_PASSWORD
    description: "Quotes Password for Mariadb"
    value: quotespwd
  - name: QUOTES_DATABASE
    description: "Database name for the application"
    value: quotesdb
  - name: MARIADB_DATABASE
    description: "Database name for the mariadb"
    value: quotesdb  
  - name: MARIADB_USER
    description: "Username for Mariadb"
    value: quotes
  - name: MARIADB_PASSWORD
    description: "Password for Mariadb"
    value: quotespwd
  - name: MARIADB_DB
    description: "Database name for the Mariadb"
    value: quotesdb  
  - name: MARIADB_PASSWORD
    description: "Mariadb password" 
    value: K4oUBKmZ7W
  - name: MARIADB_ROOT_PASSWORD
    description: "Mariadb root Password" 
    value: quotespwd     
  - name: PVC_SIZE
    description: "Size of the persistent volume for Mariadb"
    value: 1Gi  
objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${APP_NAME}
      labels:
        app.kubernetes.io/name: mariadb
        app.kubernetes.io/instance: famousapp
    type: Opaque
    data:
    stringData:
      mariadb-root-password: ${MARIADB_PASSWORD}
      mariadb-password: ${MARIADB_ROOT_PASSWORD}
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: ${APP_NAME}
      labels:
        app.kubernetes.io/name: mariadb-{cuid}
        app.kubernetes.io/instance: famousapp-{cuid}
        app.kubernetes.io/component: primary
    data:
      my.cnf: |-
        [mysqld]
        skip-name-resolve
        explicit_defaults_for_timestamp
        basedir=/opt/bitnami/mariadb
        plugin_dir=/opt/bitnami/mariadb/plugin
        port=3306
        socket=/opt/bitnami/mariadb/tmp/mysql.sock
        tmpdir=/opt/bitnami/mariadb/tmp
        max_allowed_packet=16M
        bind-address=0.0.0.0
        pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
        log-error=/opt/bitnami/mariadb/logs/mysqld.log
        character-set-server=UTF8
        collation-server=utf8_general_ci
        
        [client]
        port=3306
        socket=/opt/bitnami/mariadb/tmp/mysql.sock
        default-character-set=UTF8
        plugin_dir=/opt/bitnami/mariadb/plugin
        
        [manager]
        port=3306
        socket=/opt/bitnami/mariadb/tmp/mysql.sock
        pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

  - apiVersion: v1
    kind: Service
    metadata:
      name: ${APP_NAME}
      labels:
        app.kubernetes.io/name: mariadb-{cuid}
        app.kubernetes.io/instance: famousapp-{cuid}
        app.kubernetes.io/component: primary
      annotations:
    spec:
      type: ClusterIP
      ports:
        - name: mysql
          port: 3306
          protocol: TCP
          targetPort: mysql
          nodePort: null
      selector: 
        app.kubernetes.io/name: mariadb-{cuid}
        app.kubernetes.io/instance: famousapp-{cuid}
        app.kubernetes.io/component: primary
  - apiVersion: v1
    kind: Service
    metadata:
      name: famousapp-famouschart-{cuid}
      labels:
        app.kubernetes.io/name: famouschart-{cuid}
        app.kubernetes.io/instance: famousapp-{cuid}
        app.kubernetes.io/version: "1.16.0"
    spec:
      type: ClusterIP
      ports:
        - port: 80
          targetPort: http
          protocol: TCP
          name: http
      selector:
        app.kubernetes.io/name: famouschart-{cuid}
        app.kubernetes.io/instance: famousapp-{cuid}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: famousapp-famouschart-{cuid}
      labels:
        app.kubernetes.io/name: famouschart-{cuid}
        app.kubernetes.io/instance: famousapp-{cuid}
        app.kubernetes.io/version: "1.16.0"
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: famouschart-{cuid}
          app.kubernetes.io/instance: famousapp-{cuid}
      template:
        metadata:
          labels:
            app.kubernetes.io/name: famouschart-{cuid}
            app.kubernetes.io/instance: famousapp-{cuid}
        spec:
          securityContext:
            {}
          containers:
            - name: famouschart
              securityContext:
                {}
              image: ${APP_NAME_IMAGE}
              imagePullPolicy: IfNotPresent
              env:
              - name: QUOTES_HOSTNAME
                value: ${APP_NAME}
              - name: QUOTES_DATABASE
                value: ${QUOTES_DATABASE}
              - name: QUOTES_USER
                value: ${QUOTES_USER}
              - name: QUOTES_PASSWORD
                value: ${QUOTES_PASSWORD}
              resources:
                requests:
                  cpu: "10m"
                  memory: 20Mi
                limits:
                  cpu: "80m"
                  memory: 100Mi      
              ports:
                - name: http
                  containerPort: 8000
                  protocol: TCP
              livenessProbe:
                httpGet:
                  path: /
                  port: http
              readinessProbe:
                httpGet:
                  path: /
                  port: http
              resources:
                {}
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: ${APP_NAME}
      labels:
        app.kubernetes.io/name: mariadb-{cuid}
        app.kubernetes.io/instance: famousapp-{cuid}
        app.kubernetes.io/component: primary
    spec:
      replicas: 1
      selector:
        matchLabels: 
          app.kubernetes.io/name: mariadb-{cuid}
          app.kubernetes.io/instance: famousapp-{cuid}
          app.kubernetes.io/component: primary
      serviceName: ${APP_NAME}
      updateStrategy:
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/configuration: 68ea57c9ab60373f05868ead8353923ea87bccb131675954c21b519bc410209e
          labels:
            app.kubernetes.io/name: mariadb-{cuid}
            app.kubernetes.io/instance: famousapp-{cuid}
            app.kubernetes.io/component: primary
        spec:
          affinity:
            podAffinity:
              
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/name: mariadb-{cuid}
                        app.kubernetes.io/instance: famousapp-{cuid}
                        app.kubernetes.io/component: primary
                    topologyKey: kubernetes.io/hostname
                  weight: 1
            nodeAffinity:
              
          containers:
            - name: mariadb
              image: ${Mariadb_IMAGE}
              imagePullPolicy: "IfNotPresent"
              env:
                - name: BITNAMI_DEBUG
                  value: "false"
                - name: MARIADB_ROOT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${APP_NAME}
                      key: mariadb-root-password
                - name: MARIADB_USER
                  value: ${MARIADB_USER}
                - name: MARIADB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${APP_NAME}
                      key: mariadb-password
                - name: MARIADB_DATABASE
                  value: ${MARIADB_DATABASE}
              resources:
                requests:
                  cpu: "10m"
                  memory: 20Mi
                limits:
                  cpu: "80m"
                  memory: 100Mi    
              ports:
                - name: mysql
                  containerPort: 3306
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 120
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
                exec:
                  command:
                    - /bin/bash
                    - -ec
                    - |
                      password_aux="${MARIADB_ROOT_PASSWORD:-}"
                      if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                          password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                      fi
                      mysqladmin status -uroot -p"${password_aux}"
              readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
                exec:
                  command:
                    - /bin/bash
                    - -ec
                    - |
                      password_aux="${MARIADB_ROOT_PASSWORD:-}"
                      if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                          password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
                      fi
                      mysqladmin status -uroot -p"${password_aux}"
              resources: 
                limits: {}
                requests: {}
              volumeMounts:
                - name: data
                  mountPath: /bitnami/mariadb
                - name: config
                  mountPath: /opt/bitnami/mariadb/conf/my.cnf
                  subPath: my.cnf
          volumes:
            - name: config
              configMap:
                name: ${APP_NAME}
      volumeClaimTemplates:
        - metadata:
            name: data
            labels: 
              app.kubernetes.io/name: mariadb-{cuid}
              app.kubernetes.io/instance: famousapp-{cuid}
              app.kubernetes.io/component: primary
          spec:
            accessModes:
              - "ReadWriteOnce"
            resources:
              requests:
                storage: ${PVC_SIZE}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app.kubernetes.io/instance: famousapp-{cuid}
        app.kubernetes.io/name: famouschart-{cuid}
        app.kubernetes.io/version: 1.16.0
      name: famousapp-famouschart-{cuid}
    spec:
      port:
        targetPort: http
      to:
        kind: Service
        name: famousapp-famouschart-{cuid}
        weight: 100
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: None  
      wildcardPolicy: None
      
